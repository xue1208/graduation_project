/*
 * This file is generated by jOOQ.
 */
package com.graduation.user.tables;


import com.graduation.user.DefaultSchema;
import com.graduation.user.Indexes;
import com.graduation.user.Keys;
import com.graduation.user.tables.records.GraStudentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 学生表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GraStudent extends TableImpl<GraStudentRecord> {

    private static final long serialVersionUID = -1753745723;

    /**
     * The reference instance of <code>gra_student</code>
     */
    public static final GraStudent GRA_STUDENT = new GraStudent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GraStudentRecord> getRecordType() {
        return GraStudentRecord.class;
    }

    /**
     * The column <code>gra_student.id</code>.
     */
    public final TableField<GraStudentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>gra_student.stu_id</code>. 学号
     */
    public final TableField<GraStudentRecord, String> STU_ID = createField("stu_id", org.jooq.impl.SQLDataType.CHAR(10).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000000000", org.jooq.impl.SQLDataType.CHAR)), this, "学号");

    /**
     * The column <code>gra_student.stu_passwd</code>. 密码
     */
    public final TableField<GraStudentRecord, String> STU_PASSWD = createField("stu_passwd", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000", org.jooq.impl.SQLDataType.VARCHAR)), this, "密码");

    /**
     * The column <code>gra_student.stu_name</code>. 姓名
     */
    public final TableField<GraStudentRecord, String> STU_NAME = createField("stu_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("姓名", org.jooq.impl.SQLDataType.VARCHAR)), this, "姓名");

    /**
     * The column <code>gra_student.college_id</code>. 学院id
     */
    public final TableField<GraStudentRecord, Integer> COLLEGE_ID = createField("college_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "学院id");

    /**
     * The column <code>gra_student.college_name</code>. 学生所在学院
     */
    public final TableField<GraStudentRecord, String> COLLEGE_NAME = createField("college_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("计算机学院", org.jooq.impl.SQLDataType.VARCHAR)), this, "学生所在学院");

    /**
     * The column <code>gra_student.role_id</code>. 角色id
     */
    public final TableField<GraStudentRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.INTEGER)), this, "角色id");

    /**
     * The column <code>gra_student.role_name</code>. 角色名称
     */
    public final TableField<GraStudentRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("common_user", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");

    /**
     * The column <code>gra_student.ctime</code>. 创建时间
     */
    public final TableField<GraStudentRecord, Timestamp> CTIME = createField("ctime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>gra_student.mtime</code>. 修改时间
     */
    public final TableField<GraStudentRecord, Timestamp> MTIME = createField("mtime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * Create a <code>gra_student</code> table reference
     */
    public GraStudent() {
        this(DSL.name("gra_student"), null);
    }

    /**
     * Create an aliased <code>gra_student</code> table reference
     */
    public GraStudent(String alias) {
        this(DSL.name(alias), GRA_STUDENT);
    }

    /**
     * Create an aliased <code>gra_student</code> table reference
     */
    public GraStudent(Name alias) {
        this(alias, GRA_STUDENT);
    }

    private GraStudent(Name alias, Table<GraStudentRecord> aliased) {
        this(alias, aliased, null);
    }

    private GraStudent(Name alias, Table<GraStudentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("学生表"));
    }

    public <O extends Record> GraStudent(Table<O> child, ForeignKey<O, GraStudentRecord> key) {
        super(child, key, GRA_STUDENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GRA_STUDENT_COLLEGE_ID, Indexes.GRA_STUDENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GraStudentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GRA_STUDENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GraStudentRecord> getPrimaryKey() {
        return Keys.KEY_GRA_STUDENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GraStudentRecord>> getKeys() {
        return Arrays.<UniqueKey<GraStudentRecord>>asList(Keys.KEY_GRA_STUDENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GraStudentRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GraStudentRecord, ?>>asList(Keys.COLLEGE_ID);
    }

    public GraCollege graCollege() {
        return new GraCollege(this, Keys.COLLEGE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraStudent as(String alias) {
        return new GraStudent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraStudent as(Name alias) {
        return new GraStudent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GraStudent rename(String name) {
        return new GraStudent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GraStudent rename(Name name) {
        return new GraStudent(name, null);
    }
}
