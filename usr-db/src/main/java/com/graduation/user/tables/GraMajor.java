/*
 * This file is generated by jOOQ.
 */
package com.graduation.user.tables;


import com.graduation.user.DefaultSchema;
import com.graduation.user.Indexes;
import com.graduation.user.Keys;
import com.graduation.user.tables.records.GraMajorRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 专业表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GraMajor extends TableImpl<GraMajorRecord> {

    private static final long serialVersionUID = 1830919081;

    /**
     * The reference instance of <code>gra_major</code>
     */
    public static final GraMajor GRA_MAJOR = new GraMajor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GraMajorRecord> getRecordType() {
        return GraMajorRecord.class;
    }

    /**
     * The column <code>gra_major.id</code>. 自增id
     */
    public final TableField<GraMajorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增id");

    /**
     * The column <code>gra_major.major_name</code>. 专业
     */
    public final TableField<GraMajorRecord, String> MAJOR_NAME = createField("major_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("专业", org.jooq.impl.SQLDataType.VARCHAR)), this, "专业");

    /**
     * The column <code>gra_major.college_id</code>. 学院
     */
    public final TableField<GraMajorRecord, Integer> COLLEGE_ID = createField("college_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "学院");

    /**
     * The column <code>gra_major.ctime</code>. 创建时间
     */
    public final TableField<GraMajorRecord, Timestamp> CTIME = createField("ctime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>gra_major.mtime</code>. 修改时间
     */
    public final TableField<GraMajorRecord, Timestamp> MTIME = createField("mtime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * Create a <code>gra_major</code> table reference
     */
    public GraMajor() {
        this(DSL.name("gra_major"), null);
    }

    /**
     * Create an aliased <code>gra_major</code> table reference
     */
    public GraMajor(String alias) {
        this(DSL.name(alias), GRA_MAJOR);
    }

    /**
     * Create an aliased <code>gra_major</code> table reference
     */
    public GraMajor(Name alias) {
        this(alias, GRA_MAJOR);
    }

    private GraMajor(Name alias, Table<GraMajorRecord> aliased) {
        this(alias, aliased, null);
    }

    private GraMajor(Name alias, Table<GraMajorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("专业表"));
    }

    public <O extends Record> GraMajor(Table<O> child, ForeignKey<O, GraMajorRecord> key) {
        super(child, key, GRA_MAJOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GRA_MAJOR_COL_ID, Indexes.GRA_MAJOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GraMajorRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GRA_MAJOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GraMajorRecord> getPrimaryKey() {
        return Keys.KEY_GRA_MAJOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GraMajorRecord>> getKeys() {
        return Arrays.<UniqueKey<GraMajorRecord>>asList(Keys.KEY_GRA_MAJOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GraMajorRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GraMajorRecord, ?>>asList(Keys.COL_ID);
    }

    public GraCollege graCollege() {
        return new GraCollege(this, Keys.COL_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraMajor as(String alias) {
        return new GraMajor(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraMajor as(Name alias) {
        return new GraMajor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GraMajor rename(String name) {
        return new GraMajor(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GraMajor rename(Name name) {
        return new GraMajor(name, null);
    }
}
