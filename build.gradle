import org.springframework.boot.gradle.tasks.run.BootRun
buildscript {
    ext {
        springBootVersion = '2.1.9.RELEASE'
        springCloudVersion = 'Greenwich.SR3'
        springBootManagementVersion = '1.0.8.RELEASE'
    }

    repositories {
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springBootManagementVersion}")
        classpath("com.github.jengelman.gradle.plugins:shadow:1.2.3")
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'
    //apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'com.graduation'
    version '1.0-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        maven{url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter-web'
        compileOnly('org.projectlombok:lombok:1.18.2')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        // implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    }

    dependencyManagement {
        imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
        imports { mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}" }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
    }

    shadow{

    }
//    jar {
//        manifest {
//            attributes 'Main-Class': 'com.graduation.user.Application'
//        }
//    }
    task production(type: BootRun)  {
        classpath = sourceSets.main.runtimeClasspath
        main= 'com.graduation.user.Application'
        systemProperty 'spring.profiles.active', 'prod'
    }
    task dev(type: BootRun)  {
        classpath = sourceSets.main.runtimeClasspath
        main= 'com.graduation.user.Application'
        systemProperty 'spring.profiles.active', 'dev'
    }
}
