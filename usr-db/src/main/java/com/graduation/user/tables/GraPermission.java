/*
 * This file is generated by jOOQ.
 */
package com.graduation.user.tables;


import com.graduation.user.DefaultSchema;
import com.graduation.user.Indexes;
import com.graduation.user.Keys;
import com.graduation.user.tables.records.GraPermissionRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GraPermission extends TableImpl<GraPermissionRecord> {

    private static final long serialVersionUID = -1436830330;

    /**
     * The reference instance of <code>gra_permission</code>
     */
    public static final GraPermission GRA_PERMISSION = new GraPermission();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GraPermissionRecord> getRecordType() {
        return GraPermissionRecord.class;
    }

    /**
     * The column <code>gra_permission.id</code>.
     */
    public final TableField<GraPermissionRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>gra_permission.permission</code>. 权限
     */
    public final TableField<GraPermissionRecord, String> PERMISSION = createField("permission", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("index", org.jooq.impl.SQLDataType.VARCHAR)), this, "权限");

    /**
     * The column <code>gra_permission.role_id</code>. 用户角色
     */
    public final TableField<GraPermissionRecord, Integer> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.INTEGER)), this, "用户角色");

    /**
     * The column <code>gra_permission.role_name</code>. 角色名称
     */
    public final TableField<GraPermissionRecord, String> ROLE_NAME = createField("role_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("common_user", org.jooq.impl.SQLDataType.VARCHAR)), this, "角色名称");

    /**
     * The column <code>gra_permission.ctime</code>.
     */
    public final TableField<GraPermissionRecord, Timestamp> CTIME = createField("ctime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>gra_permission.mtime</code>.
     */
    public final TableField<GraPermissionRecord, Timestamp> MTIME = createField("mtime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>gra_permission</code> table reference
     */
    public GraPermission() {
        this(DSL.name("gra_permission"), null);
    }

    /**
     * Create an aliased <code>gra_permission</code> table reference
     */
    public GraPermission(String alias) {
        this(DSL.name(alias), GRA_PERMISSION);
    }

    /**
     * Create an aliased <code>gra_permission</code> table reference
     */
    public GraPermission(Name alias) {
        this(alias, GRA_PERMISSION);
    }

    private GraPermission(Name alias, Table<GraPermissionRecord> aliased) {
        this(alias, aliased, null);
    }

    private GraPermission(Name alias, Table<GraPermissionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> GraPermission(Table<O> child, ForeignKey<O, GraPermissionRecord> key) {
        super(child, key, GRA_PERMISSION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GRA_PERMISSION_PRIMARY, Indexes.GRA_PERMISSION_ROLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GraPermissionRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GRA_PERMISSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GraPermissionRecord> getPrimaryKey() {
        return Keys.KEY_GRA_PERMISSION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GraPermissionRecord>> getKeys() {
        return Arrays.<UniqueKey<GraPermissionRecord>>asList(Keys.KEY_GRA_PERMISSION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GraPermissionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GraPermissionRecord, ?>>asList(Keys.ROLE_ID);
    }

    public GraRole graRole() {
        return new GraRole(this, Keys.ROLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraPermission as(String alias) {
        return new GraPermission(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraPermission as(Name alias) {
        return new GraPermission(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GraPermission rename(String name) {
        return new GraPermission(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GraPermission rename(Name name) {
        return new GraPermission(name, null);
    }
}
