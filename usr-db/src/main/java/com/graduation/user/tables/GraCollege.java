/*
 * This file is generated by jOOQ.
 */
package com.graduation.user.tables;


import com.graduation.user.DefaultSchema;
import com.graduation.user.Indexes;
import com.graduation.user.Keys;
import com.graduation.user.tables.records.GraCollegeRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 学院表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GraCollege extends TableImpl<GraCollegeRecord> {

    private static final long serialVersionUID = 2043085336;

    /**
     * The reference instance of <code>gra_college</code>
     */
    public static final GraCollege GRA_COLLEGE = new GraCollege();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GraCollegeRecord> getRecordType() {
        return GraCollegeRecord.class;
    }

    /**
     * The column <code>gra_college.id</code>. 学院id
     */
    public final TableField<GraCollegeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "学院id");

    /**
     * The column <code>gra_college.col_name</code>. 学院
     */
    public final TableField<GraCollegeRecord, String> COL_NAME = createField("col_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("学院", org.jooq.impl.SQLDataType.VARCHAR)), this, "学院");

    /**
     * The column <code>gra_college.stu_total</code>. 学生总数
     */
    public final TableField<GraCollegeRecord, Integer> STU_TOTAL = createField("stu_total", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "学生总数");

    /**
     * The column <code>gra_college.tea_total</code>. 教师总数
     */
    public final TableField<GraCollegeRecord, Integer> TEA_TOTAL = createField("tea_total", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "教师总数");

    /**
     * The column <code>gra_college.ctime</code>. 创建时间
     */
    public final TableField<GraCollegeRecord, Timestamp> CTIME = createField("ctime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>gra_college.mtime</code>. 修改时间
     */
    public final TableField<GraCollegeRecord, Timestamp> MTIME = createField("mtime", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * Create a <code>gra_college</code> table reference
     */
    public GraCollege() {
        this(DSL.name("gra_college"), null);
    }

    /**
     * Create an aliased <code>gra_college</code> table reference
     */
    public GraCollege(String alias) {
        this(DSL.name(alias), GRA_COLLEGE);
    }

    /**
     * Create an aliased <code>gra_college</code> table reference
     */
    public GraCollege(Name alias) {
        this(alias, GRA_COLLEGE);
    }

    private GraCollege(Name alias, Table<GraCollegeRecord> aliased) {
        this(alias, aliased, null);
    }

    private GraCollege(Name alias, Table<GraCollegeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("学院表"));
    }

    public <O extends Record> GraCollege(Table<O> child, ForeignKey<O, GraCollegeRecord> key) {
        super(child, key, GRA_COLLEGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GRA_COLLEGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<GraCollegeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_GRA_COLLEGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GraCollegeRecord> getPrimaryKey() {
        return Keys.KEY_GRA_COLLEGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GraCollegeRecord>> getKeys() {
        return Arrays.<UniqueKey<GraCollegeRecord>>asList(Keys.KEY_GRA_COLLEGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraCollege as(String alias) {
        return new GraCollege(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GraCollege as(Name alias) {
        return new GraCollege(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GraCollege rename(String name) {
        return new GraCollege(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GraCollege rename(Name name) {
        return new GraCollege(name, null);
    }
}
